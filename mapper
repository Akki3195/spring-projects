
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStreamReader;

public class GenerateDTOAndMapper {
	public static void main(String[] var0) throws Throwable {
		String var1 = null;
		String var2 = "";
		String var3 = "";
		String var4 = "";
		String var8 = "";
		String var9 = "";
		int var10 = 0;
		int var11 = 0;
		int var12 = 0;
		int var13 = 0;
		int var14 = 0;
		int var15 = 0;
		boolean var16 = true;
		String var17 = "";
		String var18 = "";
		String var19 = "";
		String var20 = "";
		String var21 = "";
		String var22 = "";
		String var23 = "";
		String var24 = "";
		String var25 = "";
		String var26 = "";
		String var27 = "";
		String var28 = "";
		StringBuilder var29 = new StringBuilder();
		StringBuilder var30 = new StringBuilder();
		StringBuilder var31 = new StringBuilder();
		StringBuilder var32 = new StringBuilder();
		StringBuilder var33 = new StringBuilder();
		StringBuilder var34 = new StringBuilder();

		try {
			BufferedReader var35 = new BufferedReader(new InputStreamReader(System.in));
			System.out.println("Drag and Drop DO file ending Filename with DO ..... then press enter");
			String var36 = var35.readLine();
			if (!var36.contains("DO")) {
				System.out.println("\n\n Please Re-Check DO Name");
				System.exit(0);
			}

			BufferedReader var37 = new BufferedReader(new FileReader(new File(var36)));
			var25 = var36.substring(0, var36.length() - 5);
			if (var36.contains("Tx")) {
				var26 = var36.substring(0, var36.length() - 9) + "DTO.java";
				var27 = var36.substring(0, var36.length() - 9) + "Mapper.java";
			} else if (var36.contains("Stg")) {
				var26 = var36.substring(0, var36.length() - 10) + "DTO.java";
				var27 = var36.substring(0, var36.length() - 10) + "Mapper.java";
			} else {
				System.out.println("Invalid Filename, Please recheck your DO");
				System.exit(0);
			}

			System.out
					.println(" doFileName --> " + var25 + " dtoFileName --> " + var26 + " mapperFileName --> " + var27);
			String[] var5 = var25.split("\\\\");
			String[] var6 = var26.split("\\\\");
			String[] var7 = var27.split("\\\\");
			var2 = var5[var5.length - 1].substring(0, var5[var5.length - 1].length());
			if (var5[var5.length - 1].substring(0, var5[var5.length - 1].length()).contains("Tx")) {
				var3 = var6[var6.length - 1].substring(0, var6[var6.length - 1].length() - 5);
				var4 = var7[var7.length - 1].substring(0, var7[var7.length - 1].length() - 5);
			}

			if (var5[var5.length - 1].substring(0, var5[var5.length - 1].length()).contains("Stg")) {
				var3 = var6[var6.length - 1].substring(0, var6[var6.length - 1].length() - 5);
				var4 = var7[var7.length - 1].substring(0, var7[var7.length - 1].length() - 5);
			}

			var8 = var2.substring(0, 1).toLowerCase() + var2.substring(1, var2.length());
			var9 = var3.substring(0, 1).toLowerCase() + var3.substring(1, var3.length());
			var29.append(" \npackage com.sbi.llms.model.dto;\n\n");
			var32.append(" \npackage com.sbi.llms.model;\n");
			var32.append("\nimport java.sql.Timestamp;\n");
			var32.append("import com.sbi.llms.util.AppUtil;\n");
			var32.append("import com.sbi.llms.util.StringUtil;\n");
			var32.append("import com.sbi.llms.helper.DateFormatter;\n");
			var32.append("import com.sbi.llms.helper.DecimalFormatter;\n");
			var32.append("\nimport com.sbi.llms.model.dataobject." + var2 + ";\n");
			var32.append("import com.sbi.llms.model.dto." + var3 + ";\n");
			var32.append("import com.sbi.llms.constants.AppConstants;\n\n");
			var32.append("public class " + var4 + "\n{\n");
			var33.append("\tpublic " + var3 + " convertFrom" + var2 + "To" + var3 + "(");
			var33.append(" " + var2 + " " + var8 + ",");
			var33.append(" " + var3 + " " + var9);
			var33.append(" )\n\t{\n\t\ttry\n\t\t{\n");
			var34.append("\tpublic " + var2 + " convertFrom" + var3 + "To" + var2 + "(");
			var34.append(" " + var3 + " " + var9 + ",");
			var34.append(" " + var2 + " " + var8);
			var34.append(" )\n\t{\n\t\ttry\n\t\t{\n");

			while ((var1 = var37.readLine()) != null) {
				if (var1.contains("private")) {
					String[] var38;
					if (var1.contains("String")) {
						var38 = var1.trim().split(" ");
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var30.append("\tprivate String " + var38[2] + ";\n");
						var31.append("\n\tpublic void set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(String " + var38[2]
								+ ") \n\t{\n\t\tthis." + var38[2] + " = " + var38[2] + ";\n\t}\n");
						var31.append("\tpublic String get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "() \n\t{\n\t\treturn " + var38[2]
								+ ";\n\t}\n");
						var33.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var8 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var9 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var33.append(var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "());");
						var33.append("\n\t\t\t}\n");
						var34.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var34.append(var9 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "().trim());");
						var34.append("\n\t\t\t}\n");
						++var10;
					}

					if (var1.contains("BigDecimal") && !var1.contains("verNum") && !var1.contains("actionBy")) {
						var38 = var1.trim().split(" ");
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var30.append("\tprivate String " + var38[2] + ";\n");
						var31.append("\n\tpublic void set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(String " + var38[2]
								+ ") \n\t{\n\t\tthis." + var38[2] + " = " + var38[2] + ";\n\t}\n");
						var31.append("\tpublic String get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "() \n\t{\n\t\treturn " + var38[2]
								+ ";\n\t}\n");
						var33.append("\t\t\tif(null != " + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "())");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var9 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var33.append("DecimalFormatter.convertBigDecimalToSTring(" + var8 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()));");
						var33.append("\n\t\t\t}\n");
						var34.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var34.append("DecimalFormatter.convertStringToBigDecimal(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()));");
						var34.append("\n\t\t\t}\n");
						++var11;
					}

					if (var1.contains("Date") && !var1.contains("actionDt")) {
						var38 = var1.trim().split(" ");
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var30.append("\tprivate String " + var38[2] + ";\n");
						var31.append("\n\tpublic void set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(String " + var38[2]
								+ ") \n\t{\n\t\tthis." + var38[2] + " = " + var38[2] + ";\n\t}\n");
						var31.append("\tpublic String get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "() \n\t{\n\t\treturn " + var38[2]
								+ ";\n\t}\n");
						var33.append("\t\t\tif(null != " + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "())");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var9 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var33.append("DateFormatter.convertDateToString(" + var8 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()));");
						var33.append("\n\t\t\t}\n");
						var34.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var34.append("DateFormatter.convertStringToDate(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()));");
						var34.append("\n\t\t\t}\n");
						++var12;
					}

					if (var1.contains("byte[]")) {
						var38 = var1.trim().split(" ");
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var30.append("\tprivate String " + var38[2] + ";\n");
						var31.append("\n\tpublic void set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(String " + var38[2]
								+ ") \n\t{\n\t\tthis." + var38[2] + " = " + var38[2] + ";\n\t}\n");
						var31.append("\tpublic String get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "() \n\t{\n\t\treturn " + var38[2]
								+ ";\n\t}\n");
						var33.append("\t\t\tif(null != " + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "())");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\tif (StringUtil.isNotNullNotEmpty(new String(");
						var33.append(var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length())
								+ "(),AppConstants.CHAR_SET_FOR_BYTE_CONTENT)))\n\t\t\t\t{");
						var33.append("\n\t\t\t\t\t" + var9 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var33.append("new String(" + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length())
								+ "(),AppConstants.CHAR_SET_FOR_BYTE_CONTENT));");
						var33.append("\n\t\t\t\t}");
						var33.append("\n\t\t\t}\n");
						var34.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var34.append(var9 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "().getBytes());");
						var34.append("\n\t\t\t}\n");
						++var13;
					}

					if (var1.toLowerCase().contains("long") && !var1.toLowerCase().contains("serialversionuid")) {
						var38 = var1.trim().split(" ");
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var30.append("\tprivate String " + var38[2] + ";\n");
						var31.append("\n\tpublic void set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(String " + var38[2]
								+ ") \n\t{\n\t\tthis." + var38[2] + " = " + var38[2] + ";\n\t}\n");
						var31.append("\tpublic String get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "() \n\t{\n\t\treturn " + var38[2]
								+ ";\n\t}\n");
						var33.append("\t\t\tif(" + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "()>0)");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var9 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var33.append("String.valueOf(" + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "()));");
						var33.append("\n\t\t\t}\n");
						var34.append("\t\t\tif(StringUtil.isNotNullNotEmpty(" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "()))");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "(");
						var34.append("Long.parseLong(" + var9 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "()));");
						var34.append("\n\t\t\t}\n");
						++var14;
					}

					if (var1.contains("List<")) {
						if (var16) {
							var29.append("import java.util.List;\n\n");
						}

						var16 = false;
						var38 = var1.trim().split(" ");
						String var39 = var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length() - 1);
						var38[2] = var38[2].substring(0, var38[2].length() - 1);
						var17 = var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length() - 1)
								+ "DO";
						var18 = var38[2].substring(0, var38[2].length() - 1) + "DO";
						var19 = var17 + "List";
						var20 = var18 + "List";
						var21 = var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length() - 3)
								+ "DTO";
						var22 = var38[2].substring(0, var38[2].length() - 3) + "DTO";
						var23 = var21 + "List";
						var24 = var22 + "List";
						var30.append("\tprivate List<" + var21 + "> " + var24 + ";\n");
						var31.append("\n\tpublic void set" + var23 + "( List<" + var21 + "> " + var24
								+ ") \n\t{\n\t\tthis." + var24 + " = " + var24 + ";\n\t}\n");
						var31.append("\tpublic String get" + var23 + "() \n\t{\n\t\treturn " + var24 + ";\n\t}\n");
						var33.append("\t\t\tList<" + var21 + "> " + var23 + "=null;\n");
						var33.append("\t\t\t" + var21 + " " + var22 + "=null;\n");
						var33.append("\t\t\tif(null != " + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "()");
						var33.append("&& !" + var8 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "().isEmpty())");
						var33.append("\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var24 + " = new ArrayList<" + var23 + ">();\n");
						var33.append("\t\t\t\tfor(" + var17 + " " + var18 + ":" + var8 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "())\n");
						var33.append("\t\t\t\t{\n");
						var33.append("\t\t\t\t\t" + var22 + " = new " + var21 + "();\n");
						var33.append("\t\t\t\t\t" + var22 + " = convertFrom" + var17 + "To" + var21 + "(" + var18 + " ,"
								+ var22 + ");\n");
						var33.append("\t\t\t\t\tif(" + var22 + " != null)\n");
						var33.append("\t\t\t\t\t{\n");
						var33.append("\t\t\t\t\t\t" + var24 + ".add(" + var22 + ");\n");
						var33.append("\t\t\t\t\t}\n");
						var33.append("\t\t\t\t}\n");
						var33.append("\t\t\t}\n\n");
						var33.append("\t\t\tif(" + var24 + " != null && !" + var24 + ".isEmpty())\n\t\t\t{\n");
						var33.append("\t\t\t\t" + var9 + ".set" + var23 + "(" + var24 + ");\n");
						var33.append("\t\t\t}\n\n");
						var34.append("\t\t\tList<" + var17 + "> " + var19 + "=null;\n");
						var34.append("\t\t\t" + var17 + " " + var18 + "=null;\n");
						var34.append("\t\t\tif(null != " + var9 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "()");
						var34.append("&& !" + var9 + ".get" + var38[2].substring(0, 1).toUpperCase()
								+ var38[2].substring(1, var38[2].length()) + "().isEmpty())");
						var34.append("\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var20 + " = new ArrayList<" + var19 + ">();\n");
						var34.append("\t\t\t\tfor(" + var21 + " " + var22 + ":" + var9 + ".get"
								+ var38[2].substring(0, 1).toUpperCase() + var38[2].substring(1, var38[2].length())
								+ "())\n");
						var34.append("\t\t\t\t{\n");
						var34.append("\t\t\t\t\t" + var18 + " = new " + var17 + "();\n");
						var34.append("\t\t\t\t\t" + var18 + " = convertFrom" + var21 + "To" + var17 + "(" + var22 + " ,"
								+ var18 + " ," + var8 + ");\n");
						var34.append("\t\t\t\t\tif(" + var18 + " != null)\n");
						var34.append("\t\t\t\t\t{\n");
						var34.append("\t\t\t\t\t\t" + var20 + ".add(" + var18 + ");\n");
						var34.append("\t\t\t\t\t}\n");
						var34.append("\t\t\t\t}\n");
						var34.append("\t\t\t}\n\n");
						var34.append("\t\t\tif(" + var20 + " != null && !" + var20 + ".isEmpty())\n\t\t\t{\n");
						var34.append("\t\t\t\t" + var8 + ".set" + var39 + "(" + var20 + ");\n");
						var34.append("\t\t\t}\n\n");
						++var15;
					}
				}
			}

			var29.append("public class " + var3 + "\n{\n");
			var31.append("\n}");
			FileWriter var44 = new FileWriter(var26);
			BufferedWriter var43 = new BufferedWriter(var44);
			var43.write(var29.toString() + var30.toString() + var31.toString());
			var43.close();
			var33.append("\n\t\t}");
			var33.append("\n\t\tcatch(Throwable t)\n\t\t{");
			var33.append("\n\t\t\tt.printStackTrace();");
			var33.append("\n\t\t}\n");
			var33.append("\n\t\treturn " + var9 + ";");
			var33.append("\n\t}\n");
			var34.append("\n\t\t\t" + var8 + ".setActionBy(BigDecimal.valueOf(AppUtil.getUserId()));\n");
			var34.append("\t\t\t" + var8 + ".setActionDt(new Timestamp(new Date().getTime()));\n");
			var34.append("\n\t\t}");
			var34.append("\n\t\tcatch(Throwable t)\n\t\t{");
			var34.append("\n\t\t\tt.printStackTrace();");
			var34.append("\n\t\t}\n");
			var34.append("\n\t\treturn " + var8 + ";");
			var34.append("\n\t}\n");
			var34.append("\n}");
			var34.append("\n\n\n\n");
			FileWriter var40 = new FileWriter(var27);
			BufferedWriter var41 = new BufferedWriter(var40);
			var41.write(var32.toString() + var33.toString() + var34.toString());
			var41.close();
			System.out.println(" Generated DTO File --> " + var26);
			System.out.println(" Generated Mapper File --> " + var27);
		} catch (Throwable var42) {
			var42.printStackTrace();
		}

	}
}
